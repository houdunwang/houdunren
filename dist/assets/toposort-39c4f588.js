var g={exports:{}};g.exports=function(t){return c(d(t),t)};g.exports.array=c;function c(t,n){var r=t.length,e=new Array(r),o={},i=r,y=k(n),f=S(t);for(n.forEach(function(a){if(!f.has(a[0])||!f.has(a[1]))throw new Error("Unknown node. There is an unknown node in the supplied edges.")});i--;)o[i]||v(t[i],i,new Set);return e;function v(a,u,s){if(s.has(a)){var w;try{w=", node was:"+JSON.stringify(a)}catch{w=""}throw new Error("Cyclic dependency"+w)}if(!f.has(a))throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: "+JSON.stringify(a));if(!o[u]){o[u]=!0;var h=y.get(a)||new Set;if(h=Array.from(h),u=h.length){s.add(a);do{var l=h[--u];v(l,f.get(l),s)}while(u);s.delete(a)}e[--r]=a}}}function d(t){for(var n=new Set,r=0,e=t.length;r<e;r++){var o=t[r];n.add(o[0]),n.add(o[1])}return Array.from(n)}function k(t){for(var n=new Map,r=0,e=t.length;r<e;r++){var o=t[r];n.has(o[0])||n.set(o[0],new Set),n.has(o[1])||n.set(o[1],new Set),n.get(o[0]).add(o[1])}return n}function S(t){for(var n=new Map,r=0,e=t.length;r<e;r++)n.set(t[r],r);return n}
